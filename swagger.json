{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Process Engine HTTP REST API",
    "description": "",
    "termsOfService": "terms"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "iam",
      "description": "Endpoints to authenticate and manage rights"
    },
    {
      "name": "process engine",
      "description": "Endpoints to execute and manage of processes"
    },
    {
      "name": "messagebus",
      "description": "Endpoints to put messages on the messagebus"
    }
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "after logging in via `/iam/login` provide the resulting bearer-token as Authorization-header in the form of `'Bearer ' + bearer_token`"
    }
  },
  "definitions": {
    "IIdentity": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IUserEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "_meta": {
          "type": "object",
          "properties": {
            "namespace": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "isRef": {
              "type": "boolean"
            },
            "isNew": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "ClaimActionType": {
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "number"
    },
    "IAuthObject": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/IIdentity"
        }
      }
    },
    "IExpand": {
      "properties": {
        "attribute": {
          "type": "string"
        },
        "childAttributes": {
          "type": "array",
          "items": {
            "type": "IExpand",
            "description": "not linked to prevent infinite loop"
          }
        }
      }
    },
    "IPublicGetOptions": {
      "description": "options to query data from the datastore",
      "properties": {
        "select": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expandEntity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IExpand"
          }
        },
        "query": {
          "type": "IQueryObject | Array<IQueryObject> | string",
          "description": "not linked because OpenAPI doesn't allow mutli-types, see [swagger-api-issue #236](https://github.com/swagger-api/swagger-parser/issues/236)"
        }
      }
    },
    "MessagebusPublication": {
      "properties": {
        "channel": {
          "type": "string",
          "description": "the channel the message will be published on"
        },
        "msg": {
          "description": "the content of your message. This in an arbitrary object",
          "properties": {}
        },
        "options": {
          "required": false,
          "description": "Arbitrary object with additional metadata-options that will be attached to the message",
          "properties": {}
        }
      }
    },
    "StartProcessMessage": {
      "description": "An object describing the process to start and its initial state",
      "properties": {
        "msg": {
          "description": "An object with the necessary information to identify the process that should be started",
          "properties": {
            "key": {
              "type": "string"
            }
          }
        },
        "options": {
          "description": "Additional query options for the process you want to start. These options are passed through to the start-method of the processEntity, but aren't used there.",
          "$ref": "#/definitions/IPublicGetOptions"
        }
      }
    },
    "ResultObject": {
      "description": "An object indicating the success or failure of an action.",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "SuccessObject": {
      "description": "An object indicating the success of an action.",
      "properties": {
        "result": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "UserCredentials": {
      "description": "User credentials",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "paths": {
    "/processengine/start": {
      "post": {
        "tags": ["process engine"],
        "summary": "Start the execution of a process",
        "description": "This orders the process engine to start executing a process",
        "parameters": [
          {
            "name": "start message",
            "description": "The message describing the process to start and its initial state",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartProcessMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ID of the newly started process instance",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/messagebus/publish": {
      "post": {
        "tags": ["messagebus"],
        "summary": "Publish a message on the messagebus",
        "description": "This makes the process engine send the given message to the given channel on its messagebus.",
        "parameters": [
          {
            "name": "message",
            "description": "a message that can be published on the messagebus",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MessagebusPublication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessObject"
            }
          }
        }
      }
    },
    "/iam/login": {
      "post": {
        "tags": ["iam"],
        "summary": "Authenticate a user",
        "description": "Given some correct credentials, this will get you a token you can use to authenticate yourself to the process engine.",
        "parameters": [
          {
            "name": "user credentials",
            "description": "The credentials of the user you want to login as.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Login was successful",
            "schema": {
              "$ref": "#/definitions/IAuthObject"
            }
          }
        }
      }
    },
    "/iam/logout": {
      "get": {
        "tags": ["iam"],
        "summary": "Log the user out",
        "description": "This invalidates your token which effectively logs you out",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessObject"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/getidentity": {
      "get": {
        "tags": ["iam"],
        "summary": "Get the users identity",
        "description": "This will give you the Identity of the user that is authenticated with your Token",
        "responses": {
          "200": {
            "description": "Fetching the users identity was successful.",
            "schema": {
              "$ref": "#/definitions/IIdentity"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/getidentityentity": {
      "get": {
        "tags": ["iam"],
        "summary": "Get the entity to the users identity",
        "description": "This will give you the entity to the identity of the user that is authenticated with your token. This is like `/iam/getidentity`, but with a little more information.",
        "responses": {
          "200": {
            "description": "Fetching the Entity to the users Identity was successful.",
            "schema": {
              "$ref": "#/definitions/IUserEntity"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/validatecredentials": {
      "post": {
        "tags": ["iam"],
        "summary": "Validate user credentials",
        "description": "This Checks if the given user credentials are valid.",
        "parameters": [
          {
            "name": "user credentials",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`true`: The given credentials are valid. `false`: The given credentials are not valid.",
            "schema": {
              "$ref": "#/definitions/ResultObject"
            }
          }
        }
      }
    }
  }
}
